package com.epac.cap.model;

import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * UserRoleId generated by hbm2java
 */
@SuppressWarnings("serial")
@Embeddable
public class UserRoleId implements java.io.Serializable {
	private String userId;
	private String roleId;

	/**
	 * Default constructor
	 */
	public UserRoleId() {
	}

	/**
	 * Constructor which sets all of the properties
	 */
	
	public UserRoleId(String userId, String roleId) {
		this.userId = userId;
		this.roleId = roleId;
	}

	/**
	 * Accessor methods for userId
	 *
	 * @return userId  
	 */

	@Column(name = "User_Id", nullable = false, length = 35)
	public String getUserId() {
		return this.userId;
	}

	/**
	 * @param userId the userId to set
	 */
	public void setUserId(String userId) {
		this.userId = userId;
	}

	/**
	 * Accessor methods for roleId
	 *
	 * @return roleId  
	 */

	@Column(name = "Role_Id", nullable = false, length = 50)
	public String getRoleId() {
		return this.roleId;
	}

	/**
	 * @param roleId the roleId to set
	 */
	public void setRoleId(String roleId) {
		this.roleId = roleId;
	}

	@Override
	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof UserRoleId))
			return false;
		UserRoleId castOther = (UserRoleId) other;

		return ((this.getUserId() == castOther.getUserId()) || (this.getUserId() != null
				&& castOther.getUserId() != null && this.getUserId().equals(castOther.getUserId())))
				&& ((this.getRoleId() == castOther.getRoleId()) || (this.getRoleId() != null
						&& castOther.getRoleId() != null && this.getRoleId().equals(castOther.getRoleId())));
	}

	@Override
	public int hashCode() {
		int result = 17;

		result = 37 * result + (getUserId() == null ? 0 : this.getUserId().hashCode());
		result = 37 * result + (getRoleId() == null ? 0 : this.getRoleId().hashCode());
		return result;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() {
		return  roleId ;
	}

}
